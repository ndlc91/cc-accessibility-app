{"ast":null,"code":"var _jsxFileName = \"/Users/nathan/Documents/School /CSCE3444/cc-accessibility-app/src/Components/S3Connection/S3Connection.js\";\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Dropzone from 'react-dropzone-uploader';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst S3connection = () => {\n  const API_ENDPOINT = \"https://gwzlvy6oc6.execute-api.us-east-1.amazonaws.com/url-generator\";\n  const handleChangeStatus = (_ref, status) => {\n    let {\n      meta,\n      remove\n    } = _ref;\n    console.log(status, meta);\n  };\n  const handleSubmit = async files => {\n    const f = files[0];\n    console.log(f[\"file\"]);\n    // * GET request: presigned URL\n    const response = await axios({\n      method: \"GET\",\n      url: API_ENDPOINT\n    });\n    console.log('Response: ', response);\n    const result = fetch(response.data.uploadURL, {\n      method: \"PUT\",\n      body: f['file']\n    });\n    console.log(\"Result: \", result);\n\n    // * PUT request: upload files to S3\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dropzone, {\n      onChangeStatus: handleChangeStatus,\n      onSubmit: handleSubmit,\n      maxFiles: 1,\n      multiple: false,\n      canCancel: false,\n      inputContent: \"Drop A File\",\n      styles: {\n        dropzone: {\n          width: 400,\n          height: 200\n        },\n        dropzoneActive: {\n          borderColor: 'green'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = S3connection;\n/*#__PURE__*/_jsxDEV(S3connection, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 1\n}, this);\nexport default S3connection;\nvar _c;\n$RefreshReg$(_c, \"S3connection\");","map":{"version":3,"names":["Dropzone","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","S3connection","API_ENDPOINT","handleChangeStatus","_ref","status","meta","remove","console","log","handleSubmit","files","f","response","method","url","result","fetch","data","uploadURL","body","children","onChangeStatus","onSubmit","maxFiles","multiple","canCancel","inputContent","styles","dropzone","width","height","dropzoneActive","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nathan/Documents/School /CSCE3444/cc-accessibility-app/src/Components/S3Connection/S3Connection.js"],"sourcesContent":["import 'react-dropzone-uploader/dist/styles.css'\nimport Dropzone from 'react-dropzone-uploader'\nimport axios from 'axios';\n\nconst S3connection = () => {\n    const API_ENDPOINT = \"https://gwzlvy6oc6.execute-api.us-east-1.amazonaws.com/url-generator\";\n\n    const handleChangeStatus = ({ meta, remove }, status) => {\n        console.log(status, meta);\n    }\n\n    const handleSubmit = async (files) => {\n        const f = files[0];\n        console.log(f[\"file\"]);\n        // * GET request: presigned URL\n        const response = await axios({\n            method: \"GET\",\n            url: API_ENDPOINT,\n        });\n        console.log('Response: ', response);\n\n        const result = fetch(response.data.uploadURL, {\n            method: \"PUT\",\n            body: f['file'],\n        });\n        console.log(\"Result: \", result);\n\n\n        // * PUT request: upload files to S3\n\n    }\n\n    return (\n        <>\n            <Dropzone\n                onChangeStatus={handleChangeStatus}\n                onSubmit={handleSubmit}\n                maxFiles={1}\n                multiple={false}\n                canCancel={false}\n                inputContent=\"Drop A File\"\n                styles={{\n                    dropzone: { width: 400, height: 200 },\n                    dropzoneActive: { borderColor: 'green' },\n                }}\n            />\n        </>\n    )\n}\n\n<S3connection />\n\nexport default S3connection;"],"mappings":";AAAA,OAAO,yCAAyC;AAChD,OAAOA,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,MAAMC,YAAY,GAAG,sEAAsE;EAE3F,MAAMC,kBAAkB,GAAGA,CAAAC,IAAA,EAAmBC,MAAM,KAAK;IAAA,IAA7B;MAAEC,IAAI;MAAEC;IAAO,CAAC,GAAAH,IAAA;IACxCI,OAAO,CAACC,GAAG,CAACJ,MAAM,EAAEC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMI,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClC,MAAMC,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC;IAClBH,OAAO,CAACC,GAAG,CAACG,CAAC,CAAC,MAAM,CAAC,CAAC;IACtB;IACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAAC;MACzBkB,MAAM,EAAE,KAAK;MACbC,GAAG,EAAEb;IACT,CAAC,CAAC;IACFM,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEI,QAAQ,CAAC;IAEnC,MAAMG,MAAM,GAAGC,KAAK,CAACJ,QAAQ,CAACK,IAAI,CAACC,SAAS,EAAE;MAC1CL,MAAM,EAAE,KAAK;MACbM,IAAI,EAAER,CAAC,CAAC,MAAM;IAClB,CAAC,CAAC;IACFJ,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEO,MAAM,CAAC;;IAG/B;EAEJ,CAAC;;EAED,oBACIlB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,eACIvB,OAAA,CAACH,QAAQ;MACL2B,cAAc,EAAEnB,kBAAmB;MACnCoB,QAAQ,EAAEb,YAAa;MACvBc,QAAQ,EAAE,CAAE;MACZC,QAAQ,EAAE,KAAM;MAChBC,SAAS,EAAE,KAAM;MACjBC,YAAY,EAAC,aAAa;MAC1BC,MAAM,EAAE;QACJC,QAAQ,EAAE;UAAEC,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI,CAAC;QACrCC,cAAc,EAAE;UAAEC,WAAW,EAAE;QAAQ;MAC3C;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ,iBACH;AAEX,CAAC;AAAAC,EAAA,GA5CKrC,YAAY;AA8ClB,aAAAH,OAAA,CAACG,YAAY;EAAAiC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAAG;AAEhB,eAAepC,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}